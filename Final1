import re
import pandas as pd
import os
from datetime import datetime as dt
import zipfile
import glob
import shutil

years = []

for file in os.listdir(os.getcwd()):
    if file.endswith(".zip"):
        years.append(file)
yy = []        

def yearExtractor(y):
    with zipfile.ZipFile(y,'r') as myZip:
        newy = y
        newy = newy.removesuffix('.zip')
        yy.append(newy)
        myZip.extractall(f"{newy}")   
        
def monthExtractor(m):
    dir_name = os.path.join(os.getcwd()+ f"/{m}")
    extension = ".zip"

    os.chdir(dir_name) # change directory from working dir to dir with files

    for item in os.listdir(dir_name): # loop through items in dir
        if item.endswith(extension): # check for ".zip" extension
            file_name = os.path.abspath(item) # get full path of files
            zip_ref = zipfile.ZipFile(file_name) # create zipfile object
            zip_ref.extractall(dir_name) # extract file to dir
            zip_ref.close() # close file
            os.remove(file_name) # delete zipped file
    os.chdir("../")
        
x = list(map(yearExtractor,years))
x2 = list(map(monthExtractor,yy))   

path1 = os.path.join(os.getcwd()+"/Options")
path2 = os.path.join(os.getcwd()+"/Future")
if not (os.path.exists(path1)):
    os.makedirs(path1)
if not (os.path.exists(path2)):
    os.makedirs(path2)
    
    

liY = ['2010']
substring = "FUT"
path = os.listdir()

for year in liY:
    liM=[]
    for month in os.listdir(os.path.join((os.getcwd()+"/"+year))):
        path = os.path.join((os.getcwd()+"/"+year+"/"+month))
        if (os.path.isdir(path)):
            liM.append(month)
    print(year,liM)
    for month in liM:
        path = os.getcwd()+f'/{year}/{month}'
        all_files = glob.glob(path + "/*.csv")
        li=[]
        for filename in all_files:
            df = pd.read_csv(filename, index_col=None, header=0,parse_dates=['Date'],dayfirst=True)
            li.append(df)
        frame = pd.concat(li, axis=0, ignore_index=True)
        frame = frame.dropna()
        frame["Date"]=pd.to_datetime(frame["Date"])
        frame["Time"]=pd.to_datetime(frame["Time"],format="%H:%M:%S").dt.time
        frame = frame[frame["Ticker"].str.contains("NIFTY")==False]
        frame.sort_values(by=["Ticker","Date"],inplace=True,ignore_index=True)
        unames = frame["Ticker"].unique()    
        for curr in unames:
            if substring in curr:
                if os.path.exists(os.path.join(f"{os.getcwd()}/Future/{curr}.csv")) :
                    dff = pd.DataFrame()
                    for rows in range(len(frame)):
                        if frame.loc[rows,"Ticker"]==curr:
                            dff=dff.append(frame.loc[rows])
                    tmp = pd.read_csv(os.path.join(f"{os.getcwd()}/Future/{curr}.csv"),parse_dates=['Date'],dayfirst=True)
                    tmp2 = pd.concat([dff,tmp],axis=0,ignore_index=True)
                    tmp2.sort_values(by=['Date',"Time"],inplace=True)
                    curr = curr.replace("FUT","")
                    tmp2.to_csv(f"{os.getcwd()}/Future/{curr}.csv",index=False)
                    print(curr,"--- Existing FUTURE")
                else:
                    dff = pd.DataFrame()
                    for rows in range(len(frame)):
                        if frame.loc[rows,"Ticker"]==curr:
                            dff= dff.append(frame.loc[rows])
                    dff.sort_values(by=["Date","Time"],inplace=True)
                    sub_list = ["10NOV", "10OCT","10DEC","10SEP"]
                    for sub in sub_list:
                        curr = curr.replace(sub, '')
                    dff.to_csv(f"{os.getcwd()}/Future/{curr}.csv",index=False) 
                    print(curr)
            else:
                if os.path.exists(os.path.join(f"{os.getcwd()}/Options/{curr}.csv")):
                    dfo = pd.DataFrame()
                    for rows in range(len(frame)):
                        if frame.loc[rows,"Ticker"]==curr:
                            dfo=dfo.append(frame.loc[rows])
                    tmp = pd.read_csv(os.path.join(f"{os.getcwd()}/Options/{curr}.csv"),parse_dates=['Date'],dayfirst=True)
                    tmp2 = pd.concat([dfo,tmp],axis=0,ignore_index=True)
                    tmp2.sort_values(by=['Date',"Time"],inplace=True)
                    tmp2.to_csv(f"{os.getcwd()}/Options/{curr}.csv",index=False)
                    print(curr,"--- Existing OPTIONS")
            
                else:
                    dfo = pd.DataFrame()
                    for rows in range(len(frame)):
                        if frame.loc[rows,"Ticker"]==curr:
                            dfo= dfo.append(frame.loc[rows])
                    dfo.sort_values(by=["Date","Time"],inplace=True)
                    sub_list = ["10NOV", "10OCT","10DEC","10SEP"]
                    for sub in sub_list:
                        curr = curr.replace(sub, '')
                    dfo.to_csv(f"{os.getcwd()}/Options/{curr}.csv",index=False)
                    print(curr)
            
